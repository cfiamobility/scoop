package ca.gc.inspection.scoop.report;

import android.support.annotation.NonNull;
import ca.gc.inspection.scoop.util.NetworkUtils;

import static com.google.gson.internal.$Gson$Preconditions.checkNotNull;

/**
 *  - The ReportPresenter provides methods for passing the user-generated report data from the View to the Interactor
 *  - It also provides methods for validating and confirming the report
 *  - This is the Presenter for the Report action case
 */
public class ReportPresenter implements ReportContract.Presenter{

    private ReportInteractor mInteractor;
    private ReportContract.View mView;

    /**
     * Constructor that takes in the respective action case View.
     * @param view View that is linked to the respective Presenter
     */
    ReportPresenter(@NonNull ReportContract.View view, NetworkUtils network) {
        mView = checkNotNull(view);
        mInteractor = new ReportInteractor(this, network);
    }

    /**
     * Invoked by the View when the submitButton is pressed and passes the necessary information for the reporttable to the Interactor
     * @param activityId the post/comment being reported
     * @param posterId the user whose post/comment is being reported
     * @param userId the user generating the report
     * @param reportReason the reason for the report from the spinner
     * @param reportBody the body of the report from the edittext
     */
    public void submitReport(String activityId, String posterId, String userId, String reportReason, String reportBody){
        mInteractor.submitReport(activityId, posterId, userId, reportReason, reportBody);
    }

    /**
     * Invoked by the Interactor, sets the error message after database check and report of the specific post/comment already generated by the user
     */
    void reportFailMessage(){
        String message = "Failed to report post. You may have already reported this post. Thank you.";
        mView.setReportFailMessage(message);
    }

    /**
     * Invoked by the Interactor, prompts the View to create the ReportConfirmationDialog
     */
    void reportConfirmation(){
        mView.reportConfirmation();
    }

}
